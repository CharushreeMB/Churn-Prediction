# -*- coding: utf-8 -*-
"""Assignment2_Module3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jucGvjbw4SLuA0JBDwMMggl_PeQoeGtN
"""

import pandas as pd
import numpy as np 
import matplotlib.pyplot as plt  
from sklearn.model_selection import train_test_split
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, classification_report, precision_score, roc_curve, auc

df = pd.read_csv('/Users/charushree/Desktop/Machine Learning/Caravan.csv')
df['Purchase'].value_counts()

sns.countplot(x=df["Purchase"]);

5474/5822



df["Purchase"].values

df.head()
n=len(df)
print(n)

df.head()

X= df.iloc[:,:-1]
y= df['Purchase']

y= np.where(y=="Yes",1,0)

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=1000, random_state=1)

X_train.shape

X_test.shape

logistic_model1 = LogisticRegression(fit_intercept=True,max_iter=2000).fit(X_train,y_train)
print(logistic_model1.intercept_)
print(logistic_model1.coef_)

y_pred = logistic_model1.predict(X_test)
confusion_matrix(y_test,y_pred)

precision_score(y_test,y_pred)

decision_thold = 0.50 
y_pred_test =[]

np.unique(y_pred,return_counts=True)

for i in y_pred:
    if y_pred[i]<= decision_thold:
        y_pred_test.append(0)
    else:
        y_pred_test.append(1)



#Confusion matrix for Test set
confusion_matrix(y_test,y_pred_test)

y_pred_train = logistic_model1.predict(X_train)

# Confusion matrix for Train set
confusion_matrix(y_train,y_pred_train)

confusion_matrix(y_test,y_pred)